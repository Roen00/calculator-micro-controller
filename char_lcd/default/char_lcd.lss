
char_lcd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000960  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  00000960  000009d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000040  00000000  00000000  000009e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 000000e8  00000000  00000000  00000a22  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000005e7  00000000  00000000  00000b0a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000259  00000000  00000000  000010f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000005b4  00000000  00000000  0000134a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000e0  00000000  00000000  00001900  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000251  00000000  00000000  000019e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000001c8  00000000  00000000  00001c31  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000090  00000000  00000000  00001df9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e6       	ldi	r30, 0x60	; 96
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	ae 36       	cpi	r26, 0x6E	; 110
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 ae 04 	jmp	0x95c	; 0x95c <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include "HD44780.h"
//-------------------------------------
// main program
//-------------------------------------
int main(void)
{
  82:	6f 92       	push	r6
  84:	7f 92       	push	r7
  86:	8f 92       	push	r8
  88:	9f 92       	push	r9
  8a:	af 92       	push	r10
  8c:	bf 92       	push	r11
  8e:	df 92       	push	r13
  90:	ef 92       	push	r14
  92:	ff 92       	push	r15
  94:	0f 93       	push	r16
  96:	1f 93       	push	r17
  98:	df 93       	push	r29
  9a:	cf 93       	push	r28
  9c:	cd b7       	in	r28, 0x3d	; 61
  9e:	de b7       	in	r29, 0x3e	; 62
  a0:	2f 97       	sbiw	r28, 0x0f	; 15
  a2:	0f b6       	in	r0, 0x3f	; 63
  a4:	f8 94       	cli
  a6:	de bf       	out	0x3e, r29	; 62
  a8:	0f be       	out	0x3f, r0	; 63
  aa:	cd bf       	out	0x3d, r28	; 61
char temp, i;
LCD_Initialize();
  ac:	0e 94 72 01 	call	0x2e4	; 0x2e4 <LCD_Initialize>
DDRB = 0b00000000;
  b0:	17 ba       	out	0x17, r1	; 23
PORTB = 0b00001111;
  b2:	8f e0       	ldi	r24, 0x0F	; 15
  b4:	88 bb       	out	0x18, r24	; 24
  b6:	00 e0       	ldi	r16, 0x00	; 0
  b8:	10 e0       	ldi	r17, 0x00	; 0
  ba:	ee 24       	eor	r14, r14
  bc:	ff 24       	eor	r15, r15
  be:	dd 24       	eor	r13, r13


	  char str[15];


	  sprintf(str, "%15d", calculations);
  c0:	5e 01       	movw	r10, r28
  c2:	08 94       	sec
  c4:	a1 1c       	adc	r10, r1
  c6:	b1 1c       	adc	r11, r1
  c8:	90 e6       	ldi	r25, 0x60	; 96
  ca:	89 2e       	mov	r8, r25
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	99 2e       	mov	r9, r25
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  d0:	80 e9       	ldi	r24, 0x90	; 144
  d2:	68 2e       	mov	r6, r24
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	78 2e       	mov	r7, r24
int calculations = 0;

	char dzialanie = 0;
	do{

	char sw0 = PINB & 0b00000001;
  d8:	86 b3       	in	r24, 0x16	; 22
	char sw1 = PINB & 0b00000010;
  da:	96 b3       	in	r25, 0x16	; 22
	char sw2 = PINB & 0b00000100;
  dc:	26 b3       	in	r18, 0x16	; 22
	char sw3 = PINB & 0b00001000;
  de:	46 b3       	in	r20, 0x16	; 22

	if(sw0 != 0b00000001) value++;
  e0:	80 fd       	sbrc	r24, 0
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <main+0x66>
  e4:	0f 5f       	subi	r16, 0xFF	; 255
  e6:	1f 4f       	sbci	r17, 0xFF	; 255
	if(sw1 != 0b00000010) value--;
  e8:	91 fd       	sbrc	r25, 1
  ea:	02 c0       	rjmp	.+4      	; 0xf0 <main+0x6e>
  ec:	01 50       	subi	r16, 0x01	; 1
  ee:	10 40       	sbci	r17, 0x00	; 0

	if(sw2 != 0b00000100) {
  f0:	22 fd       	sbrc	r18, 2
  f2:	21 c0       	rjmp	.+66     	; 0x136 <main+0xb4>
		if(dzialanie == 0) calculations += value;
  f4:	dd 20       	and	r13, r13
  f6:	19 f4       	brne	.+6      	; 0xfe <main+0x7c>
  f8:	e0 0e       	add	r14, r16
  fa:	f1 1e       	adc	r15, r17
  fc:	1a c0       	rjmp	.+52     	; 0x132 <main+0xb0>
		if(dzialanie == 1) calculations -= value;
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	d8 16       	cp	r13, r24
 102:	19 f4       	brne	.+6      	; 0x10a <main+0x88>
 104:	e0 1a       	sub	r14, r16
 106:	f1 0a       	sbc	r15, r17
 108:	14 c0       	rjmp	.+40     	; 0x132 <main+0xb0>
		if(dzialanie == 2) calculations /= value;
 10a:	92 e0       	ldi	r25, 0x02	; 2
 10c:	d9 16       	cp	r13, r25
 10e:	31 f4       	brne	.+12     	; 0x11c <main+0x9a>
 110:	c7 01       	movw	r24, r14
 112:	b8 01       	movw	r22, r16
 114:	0e 94 af 01 	call	0x35e	; 0x35e <__divmodhi4>
 118:	7b 01       	movw	r14, r22
 11a:	0b c0       	rjmp	.+22     	; 0x132 <main+0xb0>
		if(dzialanie == 3) calculations *= value;
 11c:	a3 e0       	ldi	r26, 0x03	; 3
 11e:	da 16       	cp	r13, r26
 120:	41 f4       	brne	.+16     	; 0x132 <main+0xb0>
 122:	c7 01       	movw	r24, r14
 124:	80 9f       	mul	r24, r16
 126:	70 01       	movw	r14, r0
 128:	81 9f       	mul	r24, r17
 12a:	f0 0c       	add	r15, r0
 12c:	90 9f       	mul	r25, r16
 12e:	f0 0c       	add	r15, r0
 130:	11 24       	eor	r1, r1
 132:	00 e0       	ldi	r16, 0x00	; 0
 134:	10 e0       	ldi	r17, 0x00	; 0
			value = 0;
	}


	if(sw3 != 0b00001000) {
 136:	43 fd       	sbrc	r20, 3
 138:	03 c0       	rjmp	.+6      	; 0x140 <main+0xbe>
		dzialanie++;
 13a:	d3 94       	inc	r13
		dzialanie = dzialanie % 4;
 13c:	93 e0       	ldi	r25, 0x03	; 3
 13e:	d9 22       	and	r13, r25


	  char str[15];


	  sprintf(str, "%15d", calculations);
 140:	00 d0       	rcall	.+0      	; 0x142 <main+0xc0>
 142:	00 d0       	rcall	.+0      	; 0x144 <main+0xc2>
 144:	00 d0       	rcall	.+0      	; 0x146 <main+0xc4>
 146:	ed b7       	in	r30, 0x3d	; 61
 148:	fe b7       	in	r31, 0x3e	; 62
 14a:	31 96       	adiw	r30, 0x01	; 1
 14c:	ad b7       	in	r26, 0x3d	; 61
 14e:	be b7       	in	r27, 0x3e	; 62
 150:	12 96       	adiw	r26, 0x02	; 2
 152:	bc 92       	st	X, r11
 154:	ae 92       	st	-X, r10
 156:	11 97       	sbiw	r26, 0x01	; 1
 158:	93 82       	std	Z+3, r9	; 0x03
 15a:	82 82       	std	Z+2, r8	; 0x02
 15c:	f5 82       	std	Z+5, r15	; 0x05
 15e:	e4 82       	std	Z+4, r14	; 0x04
 160:	0e 94 d6 01 	call	0x3ac	; 0x3ac <sprintf>
	LCD_GoTo(1,0);
 164:	8d b7       	in	r24, 0x3d	; 61
 166:	9e b7       	in	r25, 0x3e	; 62
 168:	06 96       	adiw	r24, 0x06	; 6
 16a:	0f b6       	in	r0, 0x3f	; 63
 16c:	f8 94       	cli
 16e:	9e bf       	out	0x3e, r25	; 62
 170:	0f be       	out	0x3f, r0	; 63
 172:	8d bf       	out	0x3d, r24	; 61
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	60 e0       	ldi	r22, 0x00	; 0
 178:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_GoTo>
	LCD_WriteText(str);
 17c:	c5 01       	movw	r24, r10
 17e:	0e 94 43 01 	call	0x286	; 0x286 <LCD_WriteText>

	  sprintf(str, "%15d", value);
 182:	00 d0       	rcall	.+0      	; 0x184 <main+0x102>
 184:	00 d0       	rcall	.+0      	; 0x186 <main+0x104>
 186:	00 d0       	rcall	.+0      	; 0x188 <main+0x106>
 188:	ed b7       	in	r30, 0x3d	; 61
 18a:	fe b7       	in	r31, 0x3e	; 62
 18c:	31 96       	adiw	r30, 0x01	; 1
 18e:	ad b7       	in	r26, 0x3d	; 61
 190:	be b7       	in	r27, 0x3e	; 62
 192:	12 96       	adiw	r26, 0x02	; 2
 194:	bc 92       	st	X, r11
 196:	ae 92       	st	-X, r10
 198:	11 97       	sbiw	r26, 0x01	; 1
 19a:	93 82       	std	Z+3, r9	; 0x03
 19c:	82 82       	std	Z+2, r8	; 0x02
 19e:	15 83       	std	Z+5, r17	; 0x05
 1a0:	04 83       	std	Z+4, r16	; 0x04
 1a2:	0e 94 d6 01 	call	0x3ac	; 0x3ac <sprintf>
	LCD_GoTo(1,1);
 1a6:	8d b7       	in	r24, 0x3d	; 61
 1a8:	9e b7       	in	r25, 0x3e	; 62
 1aa:	06 96       	adiw	r24, 0x06	; 6
 1ac:	0f b6       	in	r0, 0x3f	; 63
 1ae:	f8 94       	cli
 1b0:	9e bf       	out	0x3e, r25	; 62
 1b2:	0f be       	out	0x3f, r0	; 63
 1b4:	8d bf       	out	0x3d, r24	; 61
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	61 e0       	ldi	r22, 0x01	; 1
 1ba:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_GoTo>
	LCD_WriteText(str);
 1be:	c5 01       	movw	r24, r10
 1c0:	0e 94 43 01 	call	0x286	; 0x286 <LCD_WriteText>
 1c4:	88 eb       	ldi	r24, 0xB8	; 184
 1c6:	9b e0       	ldi	r25, 0x0B	; 11
 1c8:	f3 01       	movw	r30, r6
 1ca:	31 97       	sbiw	r30, 0x01	; 1
 1cc:	f1 f7       	brne	.-4      	; 0x1ca <main+0x148>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1ce:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1d0:	d9 f7       	brne	.-10     	; 0x1c8 <main+0x146>
	_delay_ms(300);

	
	if(dzialanie == 0){
 1d2:	dd 20       	and	r13, r13
 1d4:	39 f4       	brne	.+14     	; 0x1e4 <main+0x162>
		LCD_GoTo(0,0);
 1d6:	80 e0       	ldi	r24, 0x00	; 0
 1d8:	60 e0       	ldi	r22, 0x00	; 0
 1da:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_GoTo>
		LCD_WriteText("+");
 1de:	85 e6       	ldi	r24, 0x65	; 101
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	1e c0       	rjmp	.+60     	; 0x220 <main+0x19e>
	}

	if(dzialanie == 1){
 1e4:	91 e0       	ldi	r25, 0x01	; 1
 1e6:	d9 16       	cp	r13, r25
 1e8:	39 f4       	brne	.+14     	; 0x1f8 <main+0x176>
		LCD_GoTo(0,0);
 1ea:	80 e0       	ldi	r24, 0x00	; 0
 1ec:	60 e0       	ldi	r22, 0x00	; 0
 1ee:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_GoTo>
		LCD_WriteText("-");
 1f2:	87 e6       	ldi	r24, 0x67	; 103
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	14 c0       	rjmp	.+40     	; 0x220 <main+0x19e>
	}
	
	if(dzialanie == 2){
 1f8:	a2 e0       	ldi	r26, 0x02	; 2
 1fa:	da 16       	cp	r13, r26
 1fc:	39 f4       	brne	.+14     	; 0x20c <main+0x18a>
		LCD_GoTo(0,0);
 1fe:	80 e0       	ldi	r24, 0x00	; 0
 200:	60 e0       	ldi	r22, 0x00	; 0
 202:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_GoTo>
		LCD_WriteText("/");
 206:	89 e6       	ldi	r24, 0x69	; 105
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	0a c0       	rjmp	.+20     	; 0x220 <main+0x19e>
	}
	
	if(dzialanie == 3){
 20c:	b3 e0       	ldi	r27, 0x03	; 3
 20e:	db 16       	cp	r13, r27
 210:	09 f0       	breq	.+2      	; 0x214 <main+0x192>
 212:	62 cf       	rjmp	.-316    	; 0xd8 <main+0x56>
		LCD_GoTo(0,0);
 214:	80 e0       	ldi	r24, 0x00	; 0
 216:	60 e0       	ldi	r22, 0x00	; 0
 218:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_GoTo>
		LCD_WriteText("*");
 21c:	8b e6       	ldi	r24, 0x6B	; 107
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	0e 94 43 01 	call	0x286	; 0x286 <LCD_WriteText>
 224:	59 cf       	rjmp	.-334    	; 0xd8 <main+0x56>

00000226 <_LCD_OutNibble>:
//-------------------------------------
// Write half byte
//-------------------------------------
void _LCD_OutNibble(unsigned char nibbleToWrite)
{
if(nibbleToWrite & 0x01)
 226:	80 ff       	sbrs	r24, 0
 228:	02 c0       	rjmp	.+4      	; 0x22e <_LCD_OutNibble+0x8>
	LCD_DB4_PORT |= LCD_DB4;
 22a:	da 9a       	sbi	0x1b, 2	; 27
 22c:	01 c0       	rjmp	.+2      	; 0x230 <_LCD_OutNibble+0xa>
else
	LCD_DB4_PORT  &= ~LCD_DB4;
 22e:	da 98       	cbi	0x1b, 2	; 27

if(nibbleToWrite & 0x02)
 230:	81 ff       	sbrs	r24, 1
 232:	02 c0       	rjmp	.+4      	; 0x238 <_LCD_OutNibble+0x12>
	LCD_DB5_PORT |= LCD_DB5;
 234:	db 9a       	sbi	0x1b, 3	; 27
 236:	01 c0       	rjmp	.+2      	; 0x23a <_LCD_OutNibble+0x14>
else
	LCD_DB5_PORT  &= ~LCD_DB5;
 238:	db 98       	cbi	0x1b, 3	; 27

if(nibbleToWrite & 0x04)
 23a:	82 ff       	sbrs	r24, 2
 23c:	02 c0       	rjmp	.+4      	; 0x242 <_LCD_OutNibble+0x1c>
	LCD_DB6_PORT |= LCD_DB6;
 23e:	dc 9a       	sbi	0x1b, 4	; 27
 240:	01 c0       	rjmp	.+2      	; 0x244 <_LCD_OutNibble+0x1e>
else
	LCD_DB6_PORT  &= ~LCD_DB6;
 242:	dc 98       	cbi	0x1b, 4	; 27

if(nibbleToWrite & 0x08)
 244:	83 ff       	sbrs	r24, 3
 246:	02 c0       	rjmp	.+4      	; 0x24c <_LCD_OutNibble+0x26>
	LCD_DB7_PORT |= LCD_DB7;
 248:	dd 9a       	sbi	0x1b, 5	; 27
 24a:	08 95       	ret
else
	LCD_DB7_PORT  &= ~LCD_DB7;
 24c:	dd 98       	cbi	0x1b, 5	; 27
 24e:	08 95       	ret

00000250 <_LCD_Write>:
}
//-------------------------------------
// Write byte
//-------------------------------------
void _LCD_Write(unsigned char dataToWrite)
{
 250:	1f 93       	push	r17
 252:	18 2f       	mov	r17, r24
LCD_E_PORT |= LCD_E;
 254:	de 9a       	sbi	0x1b, 6	; 27
_LCD_OutNibble(dataToWrite >> 4);
 256:	82 95       	swap	r24
 258:	8f 70       	andi	r24, 0x0F	; 15
 25a:	0e 94 13 01 	call	0x226	; 0x226 <_LCD_OutNibble>
LCD_E_PORT &= ~LCD_E;
 25e:	de 98       	cbi	0x1b, 6	; 27
LCD_E_PORT |= LCD_E;
 260:	de 9a       	sbi	0x1b, 6	; 27
_LCD_OutNibble(dataToWrite);
 262:	81 2f       	mov	r24, r17
 264:	0e 94 13 01 	call	0x226	; 0x226 <_LCD_OutNibble>
LCD_E_PORT &= ~LCD_E;
 268:	de 98       	cbi	0x1b, 6	; 27
 26a:	88 ec       	ldi	r24, 0xC8	; 200
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	01 97       	sbiw	r24, 0x01	; 1
 270:	f1 f7       	brne	.-4      	; 0x26e <_LCD_Write+0x1e>
_delay_us(50);
}
 272:	1f 91       	pop	r17
 274:	08 95       	ret

00000276 <LCD_WriteCommand>:
//-------------------------------------
// Write to command register
//-------------------------------------
void LCD_WriteCommand(unsigned char commandToWrite)
{
LCD_RS_PORT &= ~LCD_RS;
 276:	df 98       	cbi	0x1b, 7	; 27
_LCD_Write(commandToWrite);
 278:	0e 94 28 01 	call	0x250	; 0x250 <_LCD_Write>
}
 27c:	08 95       	ret

0000027e <LCD_WriteData>:
//-------------------------------------
// Write to data register
//-------------------------------------
void LCD_WriteData(unsigned char dataToWrite)
{
LCD_RS_PORT |= LCD_RS;
 27e:	df 9a       	sbi	0x1b, 7	; 27
_LCD_Write(dataToWrite);
 280:	0e 94 28 01 	call	0x250	; 0x250 <_LCD_Write>
}
 284:	08 95       	ret

00000286 <LCD_WriteText>:
//-------------------------------------
// Write text
//-------------------------------------
void LCD_WriteText(char * text)
{
 286:	cf 93       	push	r28
 288:	df 93       	push	r29
 28a:	ec 01       	movw	r28, r24
 28c:	03 c0       	rjmp	.+6      	; 0x294 <LCD_WriteText+0xe>
while(*text)
  LCD_WriteData(*text++);
 28e:	21 96       	adiw	r28, 0x01	; 1
 290:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_WriteData>
//-------------------------------------
// Write text
//-------------------------------------
void LCD_WriteText(char * text)
{
while(*text)
 294:	88 81       	ld	r24, Y
 296:	88 23       	and	r24, r24
 298:	d1 f7       	brne	.-12     	; 0x28e <LCD_WriteText+0x8>
  LCD_WriteData(*text++);
}
 29a:	df 91       	pop	r29
 29c:	cf 91       	pop	r28
 29e:	08 95       	ret

000002a0 <LCD_GoTo>:
//-------------------------------------
// Set display coordinates
//-------------------------------------
void LCD_GoTo(unsigned char x, unsigned char y)
{
LCD_WriteCommand(HD44780_DDRAM_SET | (x + (0x40 * y)));
 2a0:	62 95       	swap	r22
 2a2:	66 0f       	add	r22, r22
 2a4:	66 0f       	add	r22, r22
 2a6:	60 7c       	andi	r22, 0xC0	; 192
 2a8:	68 0f       	add	r22, r24
 2aa:	86 2f       	mov	r24, r22
 2ac:	80 68       	ori	r24, 0x80	; 128
 2ae:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_WriteCommand>
}
 2b2:	08 95       	ret

000002b4 <LCD_Clear>:
//-------------------------------------
// Clear display
//-------------------------------------
void LCD_Clear(void)
{
LCD_WriteCommand(HD44780_CLEAR);
 2b4:	81 e0       	ldi	r24, 0x01	; 1
 2b6:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_WriteCommand>
 2ba:	80 e4       	ldi	r24, 0x40	; 64
 2bc:	9f e1       	ldi	r25, 0x1F	; 31
 2be:	01 97       	sbiw	r24, 0x01	; 1
 2c0:	f1 f7       	brne	.-4      	; 0x2be <LCD_Clear+0xa>
_delay_ms(2);
}
 2c2:	08 95       	ret

000002c4 <LCD_Home>:
//-------------------------------------
// Set home position
//-------------------------------------
void LCD_Home(void)
{
LCD_WriteCommand(HD44780_HOME);
 2c4:	82 e0       	ldi	r24, 0x02	; 2
 2c6:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_WriteCommand>
 2ca:	80 e4       	ldi	r24, 0x40	; 64
 2cc:	9f e1       	ldi	r25, 0x1F	; 31
 2ce:	01 97       	sbiw	r24, 0x01	; 1
 2d0:	f1 f7       	brne	.-4      	; 0x2ce <LCD_Home+0xa>
_delay_ms(2);
}
 2d2:	08 95       	ret

000002d4 <LCD_ShiftLeft>:
//-------------------------------------
// Shift display left
//-------------------------------------
void LCD_ShiftLeft(void)
{
LCD_WriteCommand(HD44780_DISPLAY_CURSOR_SHIFT | HD44780_SHIFT_LEFT | HD44780_SHIFT_DISPLAY);
 2d4:	88 e1       	ldi	r24, 0x18	; 24
 2d6:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_WriteCommand>
}
 2da:	08 95       	ret

000002dc <LCD_ShiftRight>:
//-------------------------------------
// Shift display right
//-------------------------------------
void LCD_ShiftRight(void)
{
LCD_WriteCommand(HD44780_DISPLAY_CURSOR_SHIFT | HD44780_SHIFT_RIGHT | HD44780_SHIFT_DISPLAY);
 2dc:	8c e1       	ldi	r24, 0x1C	; 28
 2de:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_WriteCommand>
}
 2e2:	08 95       	ret

000002e4 <LCD_Initialize>:
//-------------------------------------
// Display initialization
//-------------------------------------
void LCD_Initialize(void)
{
 2e4:	1f 93       	push	r17
 2e6:	cf 93       	push	r28
 2e8:	df 93       	push	r29
unsigned char i;
LCD_DB4_DIR |= LCD_DB4; 
 2ea:	d2 9a       	sbi	0x1a, 2	; 26
LCD_DB5_DIR |= LCD_DB5; 
 2ec:	d3 9a       	sbi	0x1a, 3	; 26
LCD_DB6_DIR |= LCD_DB6; 
 2ee:	d4 9a       	sbi	0x1a, 4	; 26
LCD_DB7_DIR |= LCD_DB7; 
 2f0:	d5 9a       	sbi	0x1a, 5	; 26
LCD_E_DIR 	|= LCD_E;   
 2f2:	d6 9a       	sbi	0x1a, 6	; 26
LCD_RS_DIR 	|= LCD_RS;  
 2f4:	d7 9a       	sbi	0x1a, 7	; 26
 2f6:	80 e6       	ldi	r24, 0x60	; 96
 2f8:	9a ee       	ldi	r25, 0xEA	; 234
 2fa:	01 97       	sbiw	r24, 0x01	; 1
 2fc:	f1 f7       	brne	.-4      	; 0x2fa <LCD_Initialize+0x16>
_delay_ms(15); 
LCD_RS_PORT &= ~LCD_RS; 
 2fe:	df 98       	cbi	0x1b, 7	; 27
LCD_E_PORT &= ~LCD_E;  
 300:	de 98       	cbi	0x1b, 6	; 27
 302:	10 e0       	ldi	r17, 0x00	; 0
 304:	c0 e2       	ldi	r28, 0x20	; 32
 306:	de e4       	ldi	r29, 0x4E	; 78

for(i = 0; i < 3; i++)
  {
  LCD_E_PORT |= LCD_E; 
 308:	de 9a       	sbi	0x1b, 6	; 27
  _LCD_OutNibble(0x03); 
 30a:	83 e0       	ldi	r24, 0x03	; 3
 30c:	0e 94 13 01 	call	0x226	; 0x226 <_LCD_OutNibble>
  LCD_E_PORT &= ~LCD_E; 
 310:	de 98       	cbi	0x1b, 6	; 27
 312:	ce 01       	movw	r24, r28
 314:	01 97       	sbiw	r24, 0x01	; 1
 316:	f1 f7       	brne	.-4      	; 0x314 <LCD_Initialize+0x30>
LCD_RS_DIR 	|= LCD_RS;  
_delay_ms(15); 
LCD_RS_PORT &= ~LCD_RS; 
LCD_E_PORT &= ~LCD_E;  

for(i = 0; i < 3; i++)
 318:	1f 5f       	subi	r17, 0xFF	; 255
 31a:	13 30       	cpi	r17, 0x03	; 3
 31c:	a9 f7       	brne	.-22     	; 0x308 <LCD_Initialize+0x24>
  _LCD_OutNibble(0x03); 
  LCD_E_PORT &= ~LCD_E; 
  _delay_ms(5); 
  }

LCD_E_PORT |= LCD_E; 
 31e:	de 9a       	sbi	0x1b, 6	; 27
_LCD_OutNibble(0x02); 
 320:	82 e0       	ldi	r24, 0x02	; 2
 322:	0e 94 13 01 	call	0x226	; 0x226 <_LCD_OutNibble>
LCD_E_PORT &= ~LCD_E; 
 326:	de 98       	cbi	0x1b, 6	; 27
 328:	80 ea       	ldi	r24, 0xA0	; 160
 32a:	9f e0       	ldi	r25, 0x0F	; 15
 32c:	01 97       	sbiw	r24, 0x01	; 1
 32e:	f1 f7       	brne	.-4      	; 0x32c <LCD_Initialize+0x48>

_delay_ms(1); 
LCD_WriteCommand(HD44780_FUNCTION_SET | HD44780_FONT5x7 | HD44780_TWO_LINE | HD44780_4_BIT); 
 330:	88 e2       	ldi	r24, 0x28	; 40
 332:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_WriteCommand>
LCD_WriteCommand(HD44780_DISPLAY_ONOFF | HD44780_DISPLAY_OFF); 
 336:	88 e0       	ldi	r24, 0x08	; 8
 338:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_WriteCommand>
LCD_WriteCommand(HD44780_CLEAR); 
 33c:	81 e0       	ldi	r24, 0x01	; 1
 33e:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_WriteCommand>
 342:	80 e4       	ldi	r24, 0x40	; 64
 344:	9f e1       	ldi	r25, 0x1F	; 31
 346:	01 97       	sbiw	r24, 0x01	; 1
 348:	f1 f7       	brne	.-4      	; 0x346 <LCD_Initialize+0x62>
_delay_ms(2);
LCD_WriteCommand(HD44780_ENTRY_MODE | HD44780_EM_SHIFT_CURSOR | HD44780_EM_INCREMENT);
 34a:	86 e0       	ldi	r24, 0x06	; 6
 34c:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_WriteCommand>
LCD_WriteCommand(HD44780_DISPLAY_ONOFF | HD44780_DISPLAY_ON | HD44780_CURSOR_OFF | HD44780_CURSOR_NOBLINK);
 350:	8c e0       	ldi	r24, 0x0C	; 12
 352:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_WriteCommand>
}
 356:	df 91       	pop	r29
 358:	cf 91       	pop	r28
 35a:	1f 91       	pop	r17
 35c:	08 95       	ret

0000035e <__divmodhi4>:
 35e:	97 fb       	bst	r25, 7
 360:	09 2e       	mov	r0, r25
 362:	07 26       	eor	r0, r23
 364:	0a d0       	rcall	.+20     	; 0x37a <__divmodhi4_neg1>
 366:	77 fd       	sbrc	r23, 7
 368:	04 d0       	rcall	.+8      	; 0x372 <__divmodhi4_neg2>
 36a:	0c d0       	rcall	.+24     	; 0x384 <__udivmodhi4>
 36c:	06 d0       	rcall	.+12     	; 0x37a <__divmodhi4_neg1>
 36e:	00 20       	and	r0, r0
 370:	1a f4       	brpl	.+6      	; 0x378 <__divmodhi4_exit>

00000372 <__divmodhi4_neg2>:
 372:	70 95       	com	r23
 374:	61 95       	neg	r22
 376:	7f 4f       	sbci	r23, 0xFF	; 255

00000378 <__divmodhi4_exit>:
 378:	08 95       	ret

0000037a <__divmodhi4_neg1>:
 37a:	f6 f7       	brtc	.-4      	; 0x378 <__divmodhi4_exit>
 37c:	90 95       	com	r25
 37e:	81 95       	neg	r24
 380:	9f 4f       	sbci	r25, 0xFF	; 255
 382:	08 95       	ret

00000384 <__udivmodhi4>:
 384:	aa 1b       	sub	r26, r26
 386:	bb 1b       	sub	r27, r27
 388:	51 e1       	ldi	r21, 0x11	; 17
 38a:	07 c0       	rjmp	.+14     	; 0x39a <__udivmodhi4_ep>

0000038c <__udivmodhi4_loop>:
 38c:	aa 1f       	adc	r26, r26
 38e:	bb 1f       	adc	r27, r27
 390:	a6 17       	cp	r26, r22
 392:	b7 07       	cpc	r27, r23
 394:	10 f0       	brcs	.+4      	; 0x39a <__udivmodhi4_ep>
 396:	a6 1b       	sub	r26, r22
 398:	b7 0b       	sbc	r27, r23

0000039a <__udivmodhi4_ep>:
 39a:	88 1f       	adc	r24, r24
 39c:	99 1f       	adc	r25, r25
 39e:	5a 95       	dec	r21
 3a0:	a9 f7       	brne	.-22     	; 0x38c <__udivmodhi4_loop>
 3a2:	80 95       	com	r24
 3a4:	90 95       	com	r25
 3a6:	bc 01       	movw	r22, r24
 3a8:	cd 01       	movw	r24, r26
 3aa:	08 95       	ret

000003ac <sprintf>:
 3ac:	ae e0       	ldi	r26, 0x0E	; 14
 3ae:	b0 e0       	ldi	r27, 0x00	; 0
 3b0:	ec ed       	ldi	r30, 0xDC	; 220
 3b2:	f1 e0       	ldi	r31, 0x01	; 1
 3b4:	0c 94 85 04 	jmp	0x90a	; 0x90a <__prologue_saves__+0x1c>
 3b8:	0d 89       	ldd	r16, Y+21	; 0x15
 3ba:	1e 89       	ldd	r17, Y+22	; 0x16
 3bc:	86 e0       	ldi	r24, 0x06	; 6
 3be:	8c 83       	std	Y+4, r24	; 0x04
 3c0:	1a 83       	std	Y+2, r17	; 0x02
 3c2:	09 83       	std	Y+1, r16	; 0x01
 3c4:	8f ef       	ldi	r24, 0xFF	; 255
 3c6:	9f e7       	ldi	r25, 0x7F	; 127
 3c8:	9e 83       	std	Y+6, r25	; 0x06
 3ca:	8d 83       	std	Y+5, r24	; 0x05
 3cc:	9e 01       	movw	r18, r28
 3ce:	27 5e       	subi	r18, 0xE7	; 231
 3d0:	3f 4f       	sbci	r19, 0xFF	; 255
 3d2:	ce 01       	movw	r24, r28
 3d4:	01 96       	adiw	r24, 0x01	; 1
 3d6:	6f 89       	ldd	r22, Y+23	; 0x17
 3d8:	78 8d       	ldd	r23, Y+24	; 0x18
 3da:	a9 01       	movw	r20, r18
 3dc:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <vfprintf>
 3e0:	2f 81       	ldd	r18, Y+7	; 0x07
 3e2:	38 85       	ldd	r19, Y+8	; 0x08
 3e4:	02 0f       	add	r16, r18
 3e6:	13 1f       	adc	r17, r19
 3e8:	f8 01       	movw	r30, r16
 3ea:	10 82       	st	Z, r1
 3ec:	2e 96       	adiw	r28, 0x0e	; 14
 3ee:	e4 e0       	ldi	r30, 0x04	; 4
 3f0:	0c 94 a1 04 	jmp	0x942	; 0x942 <__epilogue_restores__+0x1c>

000003f4 <vfprintf>:
 3f4:	ab e0       	ldi	r26, 0x0B	; 11
 3f6:	b0 e0       	ldi	r27, 0x00	; 0
 3f8:	e0 e0       	ldi	r30, 0x00	; 0
 3fa:	f2 e0       	ldi	r31, 0x02	; 2
 3fc:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__prologue_saves__>
 400:	3c 01       	movw	r6, r24
 402:	2b 01       	movw	r4, r22
 404:	5a 01       	movw	r10, r20
 406:	fc 01       	movw	r30, r24
 408:	17 82       	std	Z+7, r1	; 0x07
 40a:	16 82       	std	Z+6, r1	; 0x06
 40c:	83 81       	ldd	r24, Z+3	; 0x03
 40e:	81 fd       	sbrc	r24, 1
 410:	03 c0       	rjmp	.+6      	; 0x418 <vfprintf+0x24>
 412:	6f ef       	ldi	r22, 0xFF	; 255
 414:	7f ef       	ldi	r23, 0xFF	; 255
 416:	c6 c1       	rjmp	.+908    	; 0x7a4 <vfprintf+0x3b0>
 418:	9a e0       	ldi	r25, 0x0A	; 10
 41a:	89 2e       	mov	r8, r25
 41c:	1e 01       	movw	r2, r28
 41e:	08 94       	sec
 420:	21 1c       	adc	r2, r1
 422:	31 1c       	adc	r3, r1
 424:	f3 01       	movw	r30, r6
 426:	23 81       	ldd	r18, Z+3	; 0x03
 428:	f2 01       	movw	r30, r4
 42a:	23 fd       	sbrc	r18, 3
 42c:	85 91       	lpm	r24, Z+
 42e:	23 ff       	sbrs	r18, 3
 430:	81 91       	ld	r24, Z+
 432:	2f 01       	movw	r4, r30
 434:	88 23       	and	r24, r24
 436:	09 f4       	brne	.+2      	; 0x43a <vfprintf+0x46>
 438:	b2 c1       	rjmp	.+868    	; 0x79e <vfprintf+0x3aa>
 43a:	85 32       	cpi	r24, 0x25	; 37
 43c:	39 f4       	brne	.+14     	; 0x44c <vfprintf+0x58>
 43e:	23 fd       	sbrc	r18, 3
 440:	85 91       	lpm	r24, Z+
 442:	23 ff       	sbrs	r18, 3
 444:	81 91       	ld	r24, Z+
 446:	2f 01       	movw	r4, r30
 448:	85 32       	cpi	r24, 0x25	; 37
 44a:	29 f4       	brne	.+10     	; 0x456 <vfprintf+0x62>
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	b3 01       	movw	r22, r6
 450:	0e 94 ed 03 	call	0x7da	; 0x7da <fputc>
 454:	e7 cf       	rjmp	.-50     	; 0x424 <vfprintf+0x30>
 456:	98 2f       	mov	r25, r24
 458:	ff 24       	eor	r15, r15
 45a:	ee 24       	eor	r14, r14
 45c:	99 24       	eor	r9, r9
 45e:	ff e1       	ldi	r31, 0x1F	; 31
 460:	ff 15       	cp	r31, r15
 462:	d0 f0       	brcs	.+52     	; 0x498 <vfprintf+0xa4>
 464:	9b 32       	cpi	r25, 0x2B	; 43
 466:	69 f0       	breq	.+26     	; 0x482 <vfprintf+0x8e>
 468:	9c 32       	cpi	r25, 0x2C	; 44
 46a:	28 f4       	brcc	.+10     	; 0x476 <vfprintf+0x82>
 46c:	90 32       	cpi	r25, 0x20	; 32
 46e:	59 f0       	breq	.+22     	; 0x486 <vfprintf+0x92>
 470:	93 32       	cpi	r25, 0x23	; 35
 472:	91 f4       	brne	.+36     	; 0x498 <vfprintf+0xa4>
 474:	0e c0       	rjmp	.+28     	; 0x492 <vfprintf+0x9e>
 476:	9d 32       	cpi	r25, 0x2D	; 45
 478:	49 f0       	breq	.+18     	; 0x48c <vfprintf+0x98>
 47a:	90 33       	cpi	r25, 0x30	; 48
 47c:	69 f4       	brne	.+26     	; 0x498 <vfprintf+0xa4>
 47e:	41 e0       	ldi	r20, 0x01	; 1
 480:	24 c0       	rjmp	.+72     	; 0x4ca <vfprintf+0xd6>
 482:	52 e0       	ldi	r21, 0x02	; 2
 484:	f5 2a       	or	r15, r21
 486:	84 e0       	ldi	r24, 0x04	; 4
 488:	f8 2a       	or	r15, r24
 48a:	28 c0       	rjmp	.+80     	; 0x4dc <vfprintf+0xe8>
 48c:	98 e0       	ldi	r25, 0x08	; 8
 48e:	f9 2a       	or	r15, r25
 490:	25 c0       	rjmp	.+74     	; 0x4dc <vfprintf+0xe8>
 492:	e0 e1       	ldi	r30, 0x10	; 16
 494:	fe 2a       	or	r15, r30
 496:	22 c0       	rjmp	.+68     	; 0x4dc <vfprintf+0xe8>
 498:	f7 fc       	sbrc	r15, 7
 49a:	29 c0       	rjmp	.+82     	; 0x4ee <vfprintf+0xfa>
 49c:	89 2f       	mov	r24, r25
 49e:	80 53       	subi	r24, 0x30	; 48
 4a0:	8a 30       	cpi	r24, 0x0A	; 10
 4a2:	70 f4       	brcc	.+28     	; 0x4c0 <vfprintf+0xcc>
 4a4:	f6 fe       	sbrs	r15, 6
 4a6:	05 c0       	rjmp	.+10     	; 0x4b2 <vfprintf+0xbe>
 4a8:	98 9c       	mul	r9, r8
 4aa:	90 2c       	mov	r9, r0
 4ac:	11 24       	eor	r1, r1
 4ae:	98 0e       	add	r9, r24
 4b0:	15 c0       	rjmp	.+42     	; 0x4dc <vfprintf+0xe8>
 4b2:	e8 9c       	mul	r14, r8
 4b4:	e0 2c       	mov	r14, r0
 4b6:	11 24       	eor	r1, r1
 4b8:	e8 0e       	add	r14, r24
 4ba:	f0 e2       	ldi	r31, 0x20	; 32
 4bc:	ff 2a       	or	r15, r31
 4be:	0e c0       	rjmp	.+28     	; 0x4dc <vfprintf+0xe8>
 4c0:	9e 32       	cpi	r25, 0x2E	; 46
 4c2:	29 f4       	brne	.+10     	; 0x4ce <vfprintf+0xda>
 4c4:	f6 fc       	sbrc	r15, 6
 4c6:	6b c1       	rjmp	.+726    	; 0x79e <vfprintf+0x3aa>
 4c8:	40 e4       	ldi	r20, 0x40	; 64
 4ca:	f4 2a       	or	r15, r20
 4cc:	07 c0       	rjmp	.+14     	; 0x4dc <vfprintf+0xe8>
 4ce:	9c 36       	cpi	r25, 0x6C	; 108
 4d0:	19 f4       	brne	.+6      	; 0x4d8 <vfprintf+0xe4>
 4d2:	50 e8       	ldi	r21, 0x80	; 128
 4d4:	f5 2a       	or	r15, r21
 4d6:	02 c0       	rjmp	.+4      	; 0x4dc <vfprintf+0xe8>
 4d8:	98 36       	cpi	r25, 0x68	; 104
 4da:	49 f4       	brne	.+18     	; 0x4ee <vfprintf+0xfa>
 4dc:	f2 01       	movw	r30, r4
 4de:	23 fd       	sbrc	r18, 3
 4e0:	95 91       	lpm	r25, Z+
 4e2:	23 ff       	sbrs	r18, 3
 4e4:	91 91       	ld	r25, Z+
 4e6:	2f 01       	movw	r4, r30
 4e8:	99 23       	and	r25, r25
 4ea:	09 f0       	breq	.+2      	; 0x4ee <vfprintf+0xfa>
 4ec:	b8 cf       	rjmp	.-144    	; 0x45e <vfprintf+0x6a>
 4ee:	89 2f       	mov	r24, r25
 4f0:	85 54       	subi	r24, 0x45	; 69
 4f2:	83 30       	cpi	r24, 0x03	; 3
 4f4:	18 f0       	brcs	.+6      	; 0x4fc <vfprintf+0x108>
 4f6:	80 52       	subi	r24, 0x20	; 32
 4f8:	83 30       	cpi	r24, 0x03	; 3
 4fa:	38 f4       	brcc	.+14     	; 0x50a <vfprintf+0x116>
 4fc:	44 e0       	ldi	r20, 0x04	; 4
 4fe:	50 e0       	ldi	r21, 0x00	; 0
 500:	a4 0e       	add	r10, r20
 502:	b5 1e       	adc	r11, r21
 504:	5f e3       	ldi	r21, 0x3F	; 63
 506:	59 83       	std	Y+1, r21	; 0x01
 508:	0f c0       	rjmp	.+30     	; 0x528 <vfprintf+0x134>
 50a:	93 36       	cpi	r25, 0x63	; 99
 50c:	31 f0       	breq	.+12     	; 0x51a <vfprintf+0x126>
 50e:	93 37       	cpi	r25, 0x73	; 115
 510:	79 f0       	breq	.+30     	; 0x530 <vfprintf+0x13c>
 512:	93 35       	cpi	r25, 0x53	; 83
 514:	09 f0       	breq	.+2      	; 0x518 <vfprintf+0x124>
 516:	56 c0       	rjmp	.+172    	; 0x5c4 <vfprintf+0x1d0>
 518:	20 c0       	rjmp	.+64     	; 0x55a <vfprintf+0x166>
 51a:	f5 01       	movw	r30, r10
 51c:	80 81       	ld	r24, Z
 51e:	89 83       	std	Y+1, r24	; 0x01
 520:	42 e0       	ldi	r20, 0x02	; 2
 522:	50 e0       	ldi	r21, 0x00	; 0
 524:	a4 0e       	add	r10, r20
 526:	b5 1e       	adc	r11, r21
 528:	61 01       	movw	r12, r2
 52a:	01 e0       	ldi	r16, 0x01	; 1
 52c:	10 e0       	ldi	r17, 0x00	; 0
 52e:	12 c0       	rjmp	.+36     	; 0x554 <vfprintf+0x160>
 530:	f5 01       	movw	r30, r10
 532:	c0 80       	ld	r12, Z
 534:	d1 80       	ldd	r13, Z+1	; 0x01
 536:	f6 fc       	sbrc	r15, 6
 538:	03 c0       	rjmp	.+6      	; 0x540 <vfprintf+0x14c>
 53a:	6f ef       	ldi	r22, 0xFF	; 255
 53c:	7f ef       	ldi	r23, 0xFF	; 255
 53e:	02 c0       	rjmp	.+4      	; 0x544 <vfprintf+0x150>
 540:	69 2d       	mov	r22, r9
 542:	70 e0       	ldi	r23, 0x00	; 0
 544:	42 e0       	ldi	r20, 0x02	; 2
 546:	50 e0       	ldi	r21, 0x00	; 0
 548:	a4 0e       	add	r10, r20
 54a:	b5 1e       	adc	r11, r21
 54c:	c6 01       	movw	r24, r12
 54e:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <strnlen>
 552:	8c 01       	movw	r16, r24
 554:	5f e7       	ldi	r21, 0x7F	; 127
 556:	f5 22       	and	r15, r21
 558:	14 c0       	rjmp	.+40     	; 0x582 <vfprintf+0x18e>
 55a:	f5 01       	movw	r30, r10
 55c:	c0 80       	ld	r12, Z
 55e:	d1 80       	ldd	r13, Z+1	; 0x01
 560:	f6 fc       	sbrc	r15, 6
 562:	03 c0       	rjmp	.+6      	; 0x56a <vfprintf+0x176>
 564:	6f ef       	ldi	r22, 0xFF	; 255
 566:	7f ef       	ldi	r23, 0xFF	; 255
 568:	02 c0       	rjmp	.+4      	; 0x56e <vfprintf+0x17a>
 56a:	69 2d       	mov	r22, r9
 56c:	70 e0       	ldi	r23, 0x00	; 0
 56e:	42 e0       	ldi	r20, 0x02	; 2
 570:	50 e0       	ldi	r21, 0x00	; 0
 572:	a4 0e       	add	r10, r20
 574:	b5 1e       	adc	r11, r21
 576:	c6 01       	movw	r24, r12
 578:	0e 94 d7 03 	call	0x7ae	; 0x7ae <strnlen_P>
 57c:	8c 01       	movw	r16, r24
 57e:	50 e8       	ldi	r21, 0x80	; 128
 580:	f5 2a       	or	r15, r21
 582:	f3 fe       	sbrs	r15, 3
 584:	07 c0       	rjmp	.+14     	; 0x594 <vfprintf+0x1a0>
 586:	1a c0       	rjmp	.+52     	; 0x5bc <vfprintf+0x1c8>
 588:	80 e2       	ldi	r24, 0x20	; 32
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	b3 01       	movw	r22, r6
 58e:	0e 94 ed 03 	call	0x7da	; 0x7da <fputc>
 592:	ea 94       	dec	r14
 594:	8e 2d       	mov	r24, r14
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	08 17       	cp	r16, r24
 59a:	19 07       	cpc	r17, r25
 59c:	a8 f3       	brcs	.-22     	; 0x588 <vfprintf+0x194>
 59e:	0e c0       	rjmp	.+28     	; 0x5bc <vfprintf+0x1c8>
 5a0:	f6 01       	movw	r30, r12
 5a2:	f7 fc       	sbrc	r15, 7
 5a4:	85 91       	lpm	r24, Z+
 5a6:	f7 fe       	sbrs	r15, 7
 5a8:	81 91       	ld	r24, Z+
 5aa:	6f 01       	movw	r12, r30
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	b3 01       	movw	r22, r6
 5b0:	0e 94 ed 03 	call	0x7da	; 0x7da <fputc>
 5b4:	e1 10       	cpse	r14, r1
 5b6:	ea 94       	dec	r14
 5b8:	01 50       	subi	r16, 0x01	; 1
 5ba:	10 40       	sbci	r17, 0x00	; 0
 5bc:	01 15       	cp	r16, r1
 5be:	11 05       	cpc	r17, r1
 5c0:	79 f7       	brne	.-34     	; 0x5a0 <vfprintf+0x1ac>
 5c2:	ea c0       	rjmp	.+468    	; 0x798 <vfprintf+0x3a4>
 5c4:	94 36       	cpi	r25, 0x64	; 100
 5c6:	11 f0       	breq	.+4      	; 0x5cc <vfprintf+0x1d8>
 5c8:	99 36       	cpi	r25, 0x69	; 105
 5ca:	69 f5       	brne	.+90     	; 0x626 <vfprintf+0x232>
 5cc:	f7 fe       	sbrs	r15, 7
 5ce:	08 c0       	rjmp	.+16     	; 0x5e0 <vfprintf+0x1ec>
 5d0:	f5 01       	movw	r30, r10
 5d2:	20 81       	ld	r18, Z
 5d4:	31 81       	ldd	r19, Z+1	; 0x01
 5d6:	42 81       	ldd	r20, Z+2	; 0x02
 5d8:	53 81       	ldd	r21, Z+3	; 0x03
 5da:	84 e0       	ldi	r24, 0x04	; 4
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	0a c0       	rjmp	.+20     	; 0x5f4 <vfprintf+0x200>
 5e0:	f5 01       	movw	r30, r10
 5e2:	80 81       	ld	r24, Z
 5e4:	91 81       	ldd	r25, Z+1	; 0x01
 5e6:	9c 01       	movw	r18, r24
 5e8:	44 27       	eor	r20, r20
 5ea:	37 fd       	sbrc	r19, 7
 5ec:	40 95       	com	r20
 5ee:	54 2f       	mov	r21, r20
 5f0:	82 e0       	ldi	r24, 0x02	; 2
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	a8 0e       	add	r10, r24
 5f6:	b9 1e       	adc	r11, r25
 5f8:	9f e6       	ldi	r25, 0x6F	; 111
 5fa:	f9 22       	and	r15, r25
 5fc:	57 ff       	sbrs	r21, 7
 5fe:	09 c0       	rjmp	.+18     	; 0x612 <vfprintf+0x21e>
 600:	50 95       	com	r21
 602:	40 95       	com	r20
 604:	30 95       	com	r19
 606:	21 95       	neg	r18
 608:	3f 4f       	sbci	r19, 0xFF	; 255
 60a:	4f 4f       	sbci	r20, 0xFF	; 255
 60c:	5f 4f       	sbci	r21, 0xFF	; 255
 60e:	e0 e8       	ldi	r30, 0x80	; 128
 610:	fe 2a       	or	r15, r30
 612:	ca 01       	movw	r24, r20
 614:	b9 01       	movw	r22, r18
 616:	a1 01       	movw	r20, r2
 618:	2a e0       	ldi	r18, 0x0A	; 10
 61a:	30 e0       	ldi	r19, 0x00	; 0
 61c:	0e 94 19 04 	call	0x832	; 0x832 <__ultoa_invert>
 620:	d8 2e       	mov	r13, r24
 622:	d2 18       	sub	r13, r2
 624:	40 c0       	rjmp	.+128    	; 0x6a6 <vfprintf+0x2b2>
 626:	95 37       	cpi	r25, 0x75	; 117
 628:	29 f4       	brne	.+10     	; 0x634 <vfprintf+0x240>
 62a:	1f 2d       	mov	r17, r15
 62c:	1f 7e       	andi	r17, 0xEF	; 239
 62e:	2a e0       	ldi	r18, 0x0A	; 10
 630:	30 e0       	ldi	r19, 0x00	; 0
 632:	1d c0       	rjmp	.+58     	; 0x66e <vfprintf+0x27a>
 634:	1f 2d       	mov	r17, r15
 636:	19 7f       	andi	r17, 0xF9	; 249
 638:	9f 36       	cpi	r25, 0x6F	; 111
 63a:	61 f0       	breq	.+24     	; 0x654 <vfprintf+0x260>
 63c:	90 37       	cpi	r25, 0x70	; 112
 63e:	20 f4       	brcc	.+8      	; 0x648 <vfprintf+0x254>
 640:	98 35       	cpi	r25, 0x58	; 88
 642:	09 f0       	breq	.+2      	; 0x646 <vfprintf+0x252>
 644:	ac c0       	rjmp	.+344    	; 0x79e <vfprintf+0x3aa>
 646:	0f c0       	rjmp	.+30     	; 0x666 <vfprintf+0x272>
 648:	90 37       	cpi	r25, 0x70	; 112
 64a:	39 f0       	breq	.+14     	; 0x65a <vfprintf+0x266>
 64c:	98 37       	cpi	r25, 0x78	; 120
 64e:	09 f0       	breq	.+2      	; 0x652 <vfprintf+0x25e>
 650:	a6 c0       	rjmp	.+332    	; 0x79e <vfprintf+0x3aa>
 652:	04 c0       	rjmp	.+8      	; 0x65c <vfprintf+0x268>
 654:	28 e0       	ldi	r18, 0x08	; 8
 656:	30 e0       	ldi	r19, 0x00	; 0
 658:	0a c0       	rjmp	.+20     	; 0x66e <vfprintf+0x27a>
 65a:	10 61       	ori	r17, 0x10	; 16
 65c:	14 fd       	sbrc	r17, 4
 65e:	14 60       	ori	r17, 0x04	; 4
 660:	20 e1       	ldi	r18, 0x10	; 16
 662:	30 e0       	ldi	r19, 0x00	; 0
 664:	04 c0       	rjmp	.+8      	; 0x66e <vfprintf+0x27a>
 666:	14 fd       	sbrc	r17, 4
 668:	16 60       	ori	r17, 0x06	; 6
 66a:	20 e1       	ldi	r18, 0x10	; 16
 66c:	32 e0       	ldi	r19, 0x02	; 2
 66e:	17 ff       	sbrs	r17, 7
 670:	08 c0       	rjmp	.+16     	; 0x682 <vfprintf+0x28e>
 672:	f5 01       	movw	r30, r10
 674:	60 81       	ld	r22, Z
 676:	71 81       	ldd	r23, Z+1	; 0x01
 678:	82 81       	ldd	r24, Z+2	; 0x02
 67a:	93 81       	ldd	r25, Z+3	; 0x03
 67c:	44 e0       	ldi	r20, 0x04	; 4
 67e:	50 e0       	ldi	r21, 0x00	; 0
 680:	08 c0       	rjmp	.+16     	; 0x692 <vfprintf+0x29e>
 682:	f5 01       	movw	r30, r10
 684:	80 81       	ld	r24, Z
 686:	91 81       	ldd	r25, Z+1	; 0x01
 688:	bc 01       	movw	r22, r24
 68a:	80 e0       	ldi	r24, 0x00	; 0
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	42 e0       	ldi	r20, 0x02	; 2
 690:	50 e0       	ldi	r21, 0x00	; 0
 692:	a4 0e       	add	r10, r20
 694:	b5 1e       	adc	r11, r21
 696:	a1 01       	movw	r20, r2
 698:	0e 94 19 04 	call	0x832	; 0x832 <__ultoa_invert>
 69c:	d8 2e       	mov	r13, r24
 69e:	d2 18       	sub	r13, r2
 6a0:	8f e7       	ldi	r24, 0x7F	; 127
 6a2:	f8 2e       	mov	r15, r24
 6a4:	f1 22       	and	r15, r17
 6a6:	f6 fe       	sbrs	r15, 6
 6a8:	0b c0       	rjmp	.+22     	; 0x6c0 <vfprintf+0x2cc>
 6aa:	5e ef       	ldi	r21, 0xFE	; 254
 6ac:	f5 22       	and	r15, r21
 6ae:	d9 14       	cp	r13, r9
 6b0:	38 f4       	brcc	.+14     	; 0x6c0 <vfprintf+0x2cc>
 6b2:	f4 fe       	sbrs	r15, 4
 6b4:	07 c0       	rjmp	.+14     	; 0x6c4 <vfprintf+0x2d0>
 6b6:	f2 fc       	sbrc	r15, 2
 6b8:	05 c0       	rjmp	.+10     	; 0x6c4 <vfprintf+0x2d0>
 6ba:	8f ee       	ldi	r24, 0xEF	; 239
 6bc:	f8 22       	and	r15, r24
 6be:	02 c0       	rjmp	.+4      	; 0x6c4 <vfprintf+0x2d0>
 6c0:	1d 2d       	mov	r17, r13
 6c2:	01 c0       	rjmp	.+2      	; 0x6c6 <vfprintf+0x2d2>
 6c4:	19 2d       	mov	r17, r9
 6c6:	f4 fe       	sbrs	r15, 4
 6c8:	0d c0       	rjmp	.+26     	; 0x6e4 <vfprintf+0x2f0>
 6ca:	fe 01       	movw	r30, r28
 6cc:	ed 0d       	add	r30, r13
 6ce:	f1 1d       	adc	r31, r1
 6d0:	80 81       	ld	r24, Z
 6d2:	80 33       	cpi	r24, 0x30	; 48
 6d4:	19 f4       	brne	.+6      	; 0x6dc <vfprintf+0x2e8>
 6d6:	99 ee       	ldi	r25, 0xE9	; 233
 6d8:	f9 22       	and	r15, r25
 6da:	08 c0       	rjmp	.+16     	; 0x6ec <vfprintf+0x2f8>
 6dc:	1f 5f       	subi	r17, 0xFF	; 255
 6de:	f2 fe       	sbrs	r15, 2
 6e0:	05 c0       	rjmp	.+10     	; 0x6ec <vfprintf+0x2f8>
 6e2:	03 c0       	rjmp	.+6      	; 0x6ea <vfprintf+0x2f6>
 6e4:	8f 2d       	mov	r24, r15
 6e6:	86 78       	andi	r24, 0x86	; 134
 6e8:	09 f0       	breq	.+2      	; 0x6ec <vfprintf+0x2f8>
 6ea:	1f 5f       	subi	r17, 0xFF	; 255
 6ec:	0f 2d       	mov	r16, r15
 6ee:	f3 fc       	sbrc	r15, 3
 6f0:	14 c0       	rjmp	.+40     	; 0x71a <vfprintf+0x326>
 6f2:	f0 fe       	sbrs	r15, 0
 6f4:	0f c0       	rjmp	.+30     	; 0x714 <vfprintf+0x320>
 6f6:	1e 15       	cp	r17, r14
 6f8:	10 f0       	brcs	.+4      	; 0x6fe <vfprintf+0x30a>
 6fa:	9d 2c       	mov	r9, r13
 6fc:	0b c0       	rjmp	.+22     	; 0x714 <vfprintf+0x320>
 6fe:	9d 2c       	mov	r9, r13
 700:	9e 0c       	add	r9, r14
 702:	91 1a       	sub	r9, r17
 704:	1e 2d       	mov	r17, r14
 706:	06 c0       	rjmp	.+12     	; 0x714 <vfprintf+0x320>
 708:	80 e2       	ldi	r24, 0x20	; 32
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	b3 01       	movw	r22, r6
 70e:	0e 94 ed 03 	call	0x7da	; 0x7da <fputc>
 712:	1f 5f       	subi	r17, 0xFF	; 255
 714:	1e 15       	cp	r17, r14
 716:	c0 f3       	brcs	.-16     	; 0x708 <vfprintf+0x314>
 718:	04 c0       	rjmp	.+8      	; 0x722 <vfprintf+0x32e>
 71a:	1e 15       	cp	r17, r14
 71c:	10 f4       	brcc	.+4      	; 0x722 <vfprintf+0x32e>
 71e:	e1 1a       	sub	r14, r17
 720:	01 c0       	rjmp	.+2      	; 0x724 <vfprintf+0x330>
 722:	ee 24       	eor	r14, r14
 724:	04 ff       	sbrs	r16, 4
 726:	0f c0       	rjmp	.+30     	; 0x746 <vfprintf+0x352>
 728:	80 e3       	ldi	r24, 0x30	; 48
 72a:	90 e0       	ldi	r25, 0x00	; 0
 72c:	b3 01       	movw	r22, r6
 72e:	0e 94 ed 03 	call	0x7da	; 0x7da <fputc>
 732:	02 ff       	sbrs	r16, 2
 734:	1d c0       	rjmp	.+58     	; 0x770 <vfprintf+0x37c>
 736:	01 fd       	sbrc	r16, 1
 738:	03 c0       	rjmp	.+6      	; 0x740 <vfprintf+0x34c>
 73a:	88 e7       	ldi	r24, 0x78	; 120
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	0e c0       	rjmp	.+28     	; 0x75c <vfprintf+0x368>
 740:	88 e5       	ldi	r24, 0x58	; 88
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	0b c0       	rjmp	.+22     	; 0x75c <vfprintf+0x368>
 746:	80 2f       	mov	r24, r16
 748:	86 78       	andi	r24, 0x86	; 134
 74a:	91 f0       	breq	.+36     	; 0x770 <vfprintf+0x37c>
 74c:	01 ff       	sbrs	r16, 1
 74e:	02 c0       	rjmp	.+4      	; 0x754 <vfprintf+0x360>
 750:	8b e2       	ldi	r24, 0x2B	; 43
 752:	01 c0       	rjmp	.+2      	; 0x756 <vfprintf+0x362>
 754:	80 e2       	ldi	r24, 0x20	; 32
 756:	f7 fc       	sbrc	r15, 7
 758:	8d e2       	ldi	r24, 0x2D	; 45
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	b3 01       	movw	r22, r6
 75e:	0e 94 ed 03 	call	0x7da	; 0x7da <fputc>
 762:	06 c0       	rjmp	.+12     	; 0x770 <vfprintf+0x37c>
 764:	80 e3       	ldi	r24, 0x30	; 48
 766:	90 e0       	ldi	r25, 0x00	; 0
 768:	b3 01       	movw	r22, r6
 76a:	0e 94 ed 03 	call	0x7da	; 0x7da <fputc>
 76e:	9a 94       	dec	r9
 770:	d9 14       	cp	r13, r9
 772:	c0 f3       	brcs	.-16     	; 0x764 <vfprintf+0x370>
 774:	da 94       	dec	r13
 776:	f1 01       	movw	r30, r2
 778:	ed 0d       	add	r30, r13
 77a:	f1 1d       	adc	r31, r1
 77c:	80 81       	ld	r24, Z
 77e:	90 e0       	ldi	r25, 0x00	; 0
 780:	b3 01       	movw	r22, r6
 782:	0e 94 ed 03 	call	0x7da	; 0x7da <fputc>
 786:	dd 20       	and	r13, r13
 788:	a9 f7       	brne	.-22     	; 0x774 <vfprintf+0x380>
 78a:	06 c0       	rjmp	.+12     	; 0x798 <vfprintf+0x3a4>
 78c:	80 e2       	ldi	r24, 0x20	; 32
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	b3 01       	movw	r22, r6
 792:	0e 94 ed 03 	call	0x7da	; 0x7da <fputc>
 796:	ea 94       	dec	r14
 798:	ee 20       	and	r14, r14
 79a:	c1 f7       	brne	.-16     	; 0x78c <vfprintf+0x398>
 79c:	43 ce       	rjmp	.-890    	; 0x424 <vfprintf+0x30>
 79e:	f3 01       	movw	r30, r6
 7a0:	66 81       	ldd	r22, Z+6	; 0x06
 7a2:	77 81       	ldd	r23, Z+7	; 0x07
 7a4:	cb 01       	movw	r24, r22
 7a6:	2b 96       	adiw	r28, 0x0b	; 11
 7a8:	e2 e1       	ldi	r30, 0x12	; 18
 7aa:	0c 94 93 04 	jmp	0x926	; 0x926 <__epilogue_restores__>

000007ae <strnlen_P>:
 7ae:	fc 01       	movw	r30, r24
 7b0:	05 90       	lpm	r0, Z+
 7b2:	61 50       	subi	r22, 0x01	; 1
 7b4:	70 40       	sbci	r23, 0x00	; 0
 7b6:	01 10       	cpse	r0, r1
 7b8:	d8 f7       	brcc	.-10     	; 0x7b0 <strnlen_P+0x2>
 7ba:	80 95       	com	r24
 7bc:	90 95       	com	r25
 7be:	8e 0f       	add	r24, r30
 7c0:	9f 1f       	adc	r25, r31
 7c2:	08 95       	ret

000007c4 <strnlen>:
 7c4:	fc 01       	movw	r30, r24
 7c6:	61 50       	subi	r22, 0x01	; 1
 7c8:	70 40       	sbci	r23, 0x00	; 0
 7ca:	01 90       	ld	r0, Z+
 7cc:	01 10       	cpse	r0, r1
 7ce:	d8 f7       	brcc	.-10     	; 0x7c6 <strnlen+0x2>
 7d0:	80 95       	com	r24
 7d2:	90 95       	com	r25
 7d4:	8e 0f       	add	r24, r30
 7d6:	9f 1f       	adc	r25, r31
 7d8:	08 95       	ret

000007da <fputc>:
 7da:	0f 93       	push	r16
 7dc:	1f 93       	push	r17
 7de:	cf 93       	push	r28
 7e0:	df 93       	push	r29
 7e2:	8c 01       	movw	r16, r24
 7e4:	eb 01       	movw	r28, r22
 7e6:	8b 81       	ldd	r24, Y+3	; 0x03
 7e8:	81 ff       	sbrs	r24, 1
 7ea:	1b c0       	rjmp	.+54     	; 0x822 <fputc+0x48>
 7ec:	82 ff       	sbrs	r24, 2
 7ee:	0d c0       	rjmp	.+26     	; 0x80a <fputc+0x30>
 7f0:	2e 81       	ldd	r18, Y+6	; 0x06
 7f2:	3f 81       	ldd	r19, Y+7	; 0x07
 7f4:	8c 81       	ldd	r24, Y+4	; 0x04
 7f6:	9d 81       	ldd	r25, Y+5	; 0x05
 7f8:	28 17       	cp	r18, r24
 7fa:	39 07       	cpc	r19, r25
 7fc:	64 f4       	brge	.+24     	; 0x816 <fputc+0x3c>
 7fe:	e8 81       	ld	r30, Y
 800:	f9 81       	ldd	r31, Y+1	; 0x01
 802:	01 93       	st	Z+, r16
 804:	f9 83       	std	Y+1, r31	; 0x01
 806:	e8 83       	st	Y, r30
 808:	06 c0       	rjmp	.+12     	; 0x816 <fputc+0x3c>
 80a:	e8 85       	ldd	r30, Y+8	; 0x08
 80c:	f9 85       	ldd	r31, Y+9	; 0x09
 80e:	80 2f       	mov	r24, r16
 810:	09 95       	icall
 812:	89 2b       	or	r24, r25
 814:	31 f4       	brne	.+12     	; 0x822 <fputc+0x48>
 816:	8e 81       	ldd	r24, Y+6	; 0x06
 818:	9f 81       	ldd	r25, Y+7	; 0x07
 81a:	01 96       	adiw	r24, 0x01	; 1
 81c:	9f 83       	std	Y+7, r25	; 0x07
 81e:	8e 83       	std	Y+6, r24	; 0x06
 820:	02 c0       	rjmp	.+4      	; 0x826 <fputc+0x4c>
 822:	0f ef       	ldi	r16, 0xFF	; 255
 824:	1f ef       	ldi	r17, 0xFF	; 255
 826:	c8 01       	movw	r24, r16
 828:	df 91       	pop	r29
 82a:	cf 91       	pop	r28
 82c:	1f 91       	pop	r17
 82e:	0f 91       	pop	r16
 830:	08 95       	ret

00000832 <__ultoa_invert>:
 832:	fa 01       	movw	r30, r20
 834:	aa 27       	eor	r26, r26
 836:	28 30       	cpi	r18, 0x08	; 8
 838:	51 f1       	breq	.+84     	; 0x88e <__stack+0x2f>
 83a:	20 31       	cpi	r18, 0x10	; 16
 83c:	81 f1       	breq	.+96     	; 0x89e <__stack+0x3f>
 83e:	e8 94       	clt
 840:	6f 93       	push	r22
 842:	6e 7f       	andi	r22, 0xFE	; 254
 844:	6e 5f       	subi	r22, 0xFE	; 254
 846:	7f 4f       	sbci	r23, 0xFF	; 255
 848:	8f 4f       	sbci	r24, 0xFF	; 255
 84a:	9f 4f       	sbci	r25, 0xFF	; 255
 84c:	af 4f       	sbci	r26, 0xFF	; 255
 84e:	b1 e0       	ldi	r27, 0x01	; 1
 850:	3e d0       	rcall	.+124    	; 0x8ce <__stack+0x6f>
 852:	b4 e0       	ldi	r27, 0x04	; 4
 854:	3c d0       	rcall	.+120    	; 0x8ce <__stack+0x6f>
 856:	67 0f       	add	r22, r23
 858:	78 1f       	adc	r23, r24
 85a:	89 1f       	adc	r24, r25
 85c:	9a 1f       	adc	r25, r26
 85e:	a1 1d       	adc	r26, r1
 860:	68 0f       	add	r22, r24
 862:	79 1f       	adc	r23, r25
 864:	8a 1f       	adc	r24, r26
 866:	91 1d       	adc	r25, r1
 868:	a1 1d       	adc	r26, r1
 86a:	6a 0f       	add	r22, r26
 86c:	71 1d       	adc	r23, r1
 86e:	81 1d       	adc	r24, r1
 870:	91 1d       	adc	r25, r1
 872:	a1 1d       	adc	r26, r1
 874:	20 d0       	rcall	.+64     	; 0x8b6 <__stack+0x57>
 876:	09 f4       	brne	.+2      	; 0x87a <__stack+0x1b>
 878:	68 94       	set
 87a:	3f 91       	pop	r19
 87c:	2a e0       	ldi	r18, 0x0A	; 10
 87e:	26 9f       	mul	r18, r22
 880:	11 24       	eor	r1, r1
 882:	30 19       	sub	r19, r0
 884:	30 5d       	subi	r19, 0xD0	; 208
 886:	31 93       	st	Z+, r19
 888:	de f6       	brtc	.-74     	; 0x840 <__ultoa_invert+0xe>
 88a:	cf 01       	movw	r24, r30
 88c:	08 95       	ret
 88e:	46 2f       	mov	r20, r22
 890:	47 70       	andi	r20, 0x07	; 7
 892:	40 5d       	subi	r20, 0xD0	; 208
 894:	41 93       	st	Z+, r20
 896:	b3 e0       	ldi	r27, 0x03	; 3
 898:	0f d0       	rcall	.+30     	; 0x8b8 <__stack+0x59>
 89a:	c9 f7       	brne	.-14     	; 0x88e <__stack+0x2f>
 89c:	f6 cf       	rjmp	.-20     	; 0x88a <__stack+0x2b>
 89e:	46 2f       	mov	r20, r22
 8a0:	4f 70       	andi	r20, 0x0F	; 15
 8a2:	40 5d       	subi	r20, 0xD0	; 208
 8a4:	4a 33       	cpi	r20, 0x3A	; 58
 8a6:	18 f0       	brcs	.+6      	; 0x8ae <__stack+0x4f>
 8a8:	49 5d       	subi	r20, 0xD9	; 217
 8aa:	31 fd       	sbrc	r19, 1
 8ac:	40 52       	subi	r20, 0x20	; 32
 8ae:	41 93       	st	Z+, r20
 8b0:	02 d0       	rcall	.+4      	; 0x8b6 <__stack+0x57>
 8b2:	a9 f7       	brne	.-22     	; 0x89e <__stack+0x3f>
 8b4:	ea cf       	rjmp	.-44     	; 0x88a <__stack+0x2b>
 8b6:	b4 e0       	ldi	r27, 0x04	; 4
 8b8:	a6 95       	lsr	r26
 8ba:	97 95       	ror	r25
 8bc:	87 95       	ror	r24
 8be:	77 95       	ror	r23
 8c0:	67 95       	ror	r22
 8c2:	ba 95       	dec	r27
 8c4:	c9 f7       	brne	.-14     	; 0x8b8 <__stack+0x59>
 8c6:	00 97       	sbiw	r24, 0x00	; 0
 8c8:	61 05       	cpc	r22, r1
 8ca:	71 05       	cpc	r23, r1
 8cc:	08 95       	ret
 8ce:	9b 01       	movw	r18, r22
 8d0:	ac 01       	movw	r20, r24
 8d2:	0a 2e       	mov	r0, r26
 8d4:	06 94       	lsr	r0
 8d6:	57 95       	ror	r21
 8d8:	47 95       	ror	r20
 8da:	37 95       	ror	r19
 8dc:	27 95       	ror	r18
 8de:	ba 95       	dec	r27
 8e0:	c9 f7       	brne	.-14     	; 0x8d4 <__stack+0x75>
 8e2:	62 0f       	add	r22, r18
 8e4:	73 1f       	adc	r23, r19
 8e6:	84 1f       	adc	r24, r20
 8e8:	95 1f       	adc	r25, r21
 8ea:	a0 1d       	adc	r26, r0
 8ec:	08 95       	ret

000008ee <__prologue_saves__>:
 8ee:	2f 92       	push	r2
 8f0:	3f 92       	push	r3
 8f2:	4f 92       	push	r4
 8f4:	5f 92       	push	r5
 8f6:	6f 92       	push	r6
 8f8:	7f 92       	push	r7
 8fa:	8f 92       	push	r8
 8fc:	9f 92       	push	r9
 8fe:	af 92       	push	r10
 900:	bf 92       	push	r11
 902:	cf 92       	push	r12
 904:	df 92       	push	r13
 906:	ef 92       	push	r14
 908:	ff 92       	push	r15
 90a:	0f 93       	push	r16
 90c:	1f 93       	push	r17
 90e:	cf 93       	push	r28
 910:	df 93       	push	r29
 912:	cd b7       	in	r28, 0x3d	; 61
 914:	de b7       	in	r29, 0x3e	; 62
 916:	ca 1b       	sub	r28, r26
 918:	db 0b       	sbc	r29, r27
 91a:	0f b6       	in	r0, 0x3f	; 63
 91c:	f8 94       	cli
 91e:	de bf       	out	0x3e, r29	; 62
 920:	0f be       	out	0x3f, r0	; 63
 922:	cd bf       	out	0x3d, r28	; 61
 924:	09 94       	ijmp

00000926 <__epilogue_restores__>:
 926:	2a 88       	ldd	r2, Y+18	; 0x12
 928:	39 88       	ldd	r3, Y+17	; 0x11
 92a:	48 88       	ldd	r4, Y+16	; 0x10
 92c:	5f 84       	ldd	r5, Y+15	; 0x0f
 92e:	6e 84       	ldd	r6, Y+14	; 0x0e
 930:	7d 84       	ldd	r7, Y+13	; 0x0d
 932:	8c 84       	ldd	r8, Y+12	; 0x0c
 934:	9b 84       	ldd	r9, Y+11	; 0x0b
 936:	aa 84       	ldd	r10, Y+10	; 0x0a
 938:	b9 84       	ldd	r11, Y+9	; 0x09
 93a:	c8 84       	ldd	r12, Y+8	; 0x08
 93c:	df 80       	ldd	r13, Y+7	; 0x07
 93e:	ee 80       	ldd	r14, Y+6	; 0x06
 940:	fd 80       	ldd	r15, Y+5	; 0x05
 942:	0c 81       	ldd	r16, Y+4	; 0x04
 944:	1b 81       	ldd	r17, Y+3	; 0x03
 946:	aa 81       	ldd	r26, Y+2	; 0x02
 948:	b9 81       	ldd	r27, Y+1	; 0x01
 94a:	ce 0f       	add	r28, r30
 94c:	d1 1d       	adc	r29, r1
 94e:	0f b6       	in	r0, 0x3f	; 63
 950:	f8 94       	cli
 952:	de bf       	out	0x3e, r29	; 62
 954:	0f be       	out	0x3f, r0	; 63
 956:	cd bf       	out	0x3d, r28	; 61
 958:	ed 01       	movw	r28, r26
 95a:	08 95       	ret

0000095c <_exit>:
 95c:	f8 94       	cli

0000095e <__stop_program>:
 95e:	ff cf       	rjmp	.-2      	; 0x95e <__stop_program>
